plotData1 = data.frame(cbind(sim_data$true_data, kmeansRes$Clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData1, aes(x = plotData1$X1, y = plotData1$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
#ISDBSCAN batch
isDbscanRes_batch1 = ISDBSCAN(sim_data$obs_data, k = 120, batch_size = 100) #Forse k 20, k25, 30, 35,40, 50, 60, 80, 100, 120
#ISDBSCAN batch
isDbscanRes_batch1 = ISDBSCAN(sim_data$obs_data, k = 120, batch_size = 100) #Forse k 20, k25, 30, 35,40, 50, 60, 80, 100, 120
#ISDBSCAN batch
isDbscanRes_batch1 = ISDBSCAN(sim_data$obs_data, k = 120, batch_size = 200) #Forse k 20, k25, 30, 35,40, 50, 60, 80, 100, 120
#ISDBSCAN batch
isDbscanRes_batch1 = ISDBSCAN(prova$obs_data, k = 3, batch_size = 2) #Forse k 20, k25, 30, 35,40, 50, 60, 80, 100, 120
nC <- 10  # number of cells
nG <- 3 # number of genes
prova <- simulate_gauss_mix(n_cells=nC, n_genes=nG)
#ISDBSCAN batch
isDbscanRes_batch1 = ISDBSCAN(prova$obs_data, k = 3, batch_size = 2) #Forse k 20, k25, 30, 35,40, 50, 60, 80, 100, 120
nC <- 100  # number of cells
nG <- 3 # number of genes
prova <- simulate_gauss_mix(n_cells=nC, n_genes=nG)
#ISDBSCAN batch
isDbscanRes_batch1 = ISDBSCAN(prova$obs_data, k = 3, batch_size = 10) #Forse k 20, k25, 30, 35,40, 50, 60, 80, 100, 120
#ISDBSCAN batch
isDbscanRes_batch1 = ISDBSCAN(prova$obs_data, k = 3, batch_size = 8) #Forse k 20, k25, 30, 35,40, 50, 60, 80, 100, 120
#ISDBSCAN batch
isDbscanRes_batch1 = ISDBSCAN(prova$obs_data, k = 3, batch_size = 7) #Forse k 20, k25, 30, 35,40, 50, 60, 80, 100, 120
#ISDBSCAN batch
isDbscanRes_batch1 = ISDBSCAN(prova$obs_data, k = 3, batch_size = 7) #Forse k 20, k25, 30, 35,40, 50, 60, 80, 100, 120
#ISDBSCAN batch
isDbscanRes_batch1 = ISDBSCAN(prova$obs_data, k = 3, batch_size = 6) #Forse k 20, k25, 30, 35,40, 50, 60, 80, 100, 120
#ISDBSCAN batch
isDbscanRes_batch1 = ISDBSCAN(prova$obs_data, k = 3, batch_size = 5) #Forse k 20, k25, 30, 35,40, 50, 60, 80, 100, 120
#ISDBSCAN batch
isDbscanRes_batch1 = ISDBSCAN(prova$obs_data, k = 3, batch_size = 4) #Forse k 20, k25, 30, 35,40, 50, 60, 80, 100, 120
#ISDBSCAN batch
isDbscanRes_batch1 = ISDBSCAN(prova$obs_data, k = 3, batch_size = 3) #Forse k 20, k25, 30, 35,40, 50, 60, 80, 100, 120
unique(isDbscanRes_batch1$clusters)
sum(isDbscanRes_batch1$clusters==-2)
isDbscanRes_batch1$clusters[isDbscanRes_batch1$clusters==-2] = 99
nC <- 10  # number of cells
nG <- 3 # number of genes
prova <- simulate_gauss_mix(n_cells=nC, n_genes=nG)
#ISDBSCAN batch
isDbscanRes_batch1 = ISDBSCAN(prova$obs_data, k = 3, batch_size = 3) #Forse k 20, k25, 30, 35,40, 50, 60, 80, 100, 120
#ISDBSCAN batch
isDbscanRes_batch1 = ISDBSCAN(prova$obs_data, k = 3, batch_size = 4) #Forse k 20, k25, 30, 35,40, 50, 60, 80, 100, 120
save.image("~/Scrivania/Rpackage/dataset/SimDataResults.RData")
library(ISDBSCAN)
nC <- 10  # number of cells
nG <- 3 # number of genes
prova <- simulate_gauss_mix(n_cells=nC, n_genes=nG)
#ISDBSCAN batch
isDbscanRes_batch1 = ISDBSCAN(prova$obs_data, k = 3, batch_size = 4) #Forse k 20, k25, 30, 35,40, 50, 60, 80, 100, 120
library(ISDBSCAN)
#ISDBSCAN batch
isDbscanRes_batch1 = ISDBSCAN(prova$obs_data, k = 3, batch_size = 4) #Forse k 20, k25, 30, 35,40, 50, 60, 80, 100, 120
#ISDBSCAN batch
isDbscanRes_batch1 = ISDBSCAN(prova$obs_data, k = 3, batch_size = 6) #Forse k 20, k25, 30, 35,40, 50, 60, 80, 100, 120
#ISDBSCAN batch
isDbscanRes_batch1 = ISDBSCAN(prova$obs_data, k = 3, batch_size = 8) #Forse k 20, k25, 30, 35,40, 50, 60, 80, 100, 120
#ISDBSCAN batch
isDbscanRes_batch1 = ISDBSCAN(prova$obs_data, k = 3, batch_size = 8) #Forse k 20, k25, 30, 35,40, 50, 60, 80, 100, 120
#ISDBSCAN batch
isDbscanRes_batch1 = ISDBSCAN(prova$obs_data, k = 3, batch_size = 9) #Forse k 20, k25, 30, 35,40, 50, 60, 80, 100, 120
#ISDBSCAN batch
isDbscanRes_batch1 = ISDBSCAN(prova$obs_data, k = 3, batch_size = 4) #Forse k 20, k25, 30, 35,40, 50, 60, 80, 100, 120
library(ISDBSCAN)
library(mbkmeans)
library(ggplot2)
ggplot(plotData, aes(x = plotData$X1, y = plotData$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
#kmeans
kmeansRes = mbkmeans(t(sim_data$obs_data), clusters = 3)
plotData1 = data.frame(cbind(sim_data$true_data, kmeansRes$Clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData1, aes(x = plotData1$X1, y = plotData1$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
#ISDBSCAN batch
isDbscanRes_batch1 = ISDBSCAN(sim_data$obs_data, k = 120, batch_size = 100) #Forse k 20, k25, 30, 35,40, 50, 60, 80, 100, 120
unique(isDbscanRes_batch1$clusters)
sum(isDbscanRes_batch1$clusters==-2)
isDbscanRes_batch1$clusters[isDbscanRes_batch1$clusters==-2] = 99
plotData = data.frame(cbind(sim_data$true_data, isDbscanRes_batch1$clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData, aes(x = plotData$X1, y = plotData$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
plotData = data.frame(cbind(sim_data$true_data, isDbscanRes$clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData, aes(x = plotData$X1, y = plotData$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
plotData = data.frame(cbind(sim_data$true_data, isDbscanRes_batch1$clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData, aes(x = plotData$X1, y = plotData$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
#ISDBSCAN batch
isDbscanRes_batch1 = ISDBSCAN(sim_data$obs_data, k = 120, batch_size = 250) #Forse k 20, k25, 30, 35,40, 50, 60, 80, 100, 120
unique(isDbscanRes_batch1$clusters)
sum(isDbscanRes_batch1$clusters==-2)
isDbscanRes_batch1$clusters[isDbscanRes_batch1$clusters==-2] = 99
plotData = data.frame(cbind(sim_data$true_data, isDbscanRes_batch1$clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData, aes(x = plotData$X1, y = plotData$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
#kmeans a blocchi
kmeansRes = mbkmeans(t(sim_data$obs_data), clusters = 3, batch_size = 100)
plotData1 = data.frame(cbind(sim_data$true_data, kmeansRes$Clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData1, aes(x = plotData1$X1, y = plotData1$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
#kmeans a blocchi
kmeansRes = mbkmeans(t(sim_data$obs_data), clusters = 3, batch_size = 250)
plotData1 = data.frame(cbind(sim_data$true_data, kmeansRes$Clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData1, aes(x = plotData1$X1, y = plotData1$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
save.image("~/Scrivania/Rpackage/dataset/SimDataResults.RData")
#' @return a list with (1) the true cluster labels
#' (2) the true 2D dimensional data in 2D with
#' \code{n_cells} and (2) the observed data with
#' \code{n_cells} rows and \code{n_genes} columns
#'
#' @example
#' simulate_gauss_mix(n_cells=10, n_genes=5)
#'
#' @author Stephanie Hicks
#'
simulate_gauss_mix <- function(n_cells, n_genes,
k = 3, x_mus = c(0,5,5),
x_sds = c(1,0.1,1),
y_mus = c(5,5,0),
y_sds = c(1,0.1,1),
prop1 = c(0.3,0.5,0.2))
{
if(k != length(x_mus)){stop("k is not same as length of x_mus")}
if(k != length(x_sds)){stop("k is not same as length of x_sds")}
if(k != length(y_mus)){stop("k is not same as length of y_mus")}
if(k != length(y_sds)){stop("k is not same as length of y_sds")}
if(k != length(prop1)){stop("k is not same as length of prop1")}
comp1 <- sample(seq_len(k), prob=prop1, size=n_cells, replace=TRUE)
# Sampling locations for cells in each component
samples1 <- cbind(rnorm(n=n_cells, mean=x_mus[comp1],sd=x_sds[comp1]),
rnorm(n=n_cells, mean=y_mus[comp1],sd=y_sds[comp1]))
# Random projection to D dimensional space, to mimic high-dimensional expression data.
proj <- matrix(rnorm(n_genes*n_cells), nrow=n_genes, ncol=2)
A1 <- samples1 %*% t(proj)
# Add normally distributed noise.
A1 <- A1 + rnorm(n_genes*n_cells)
rownames(A1) <- paste0("Cell", seq_len(n_cells), "-1")
colnames(A1) <- paste0("Gene", seq_len(n_genes))
list("true_center" = cbind("x" = x_mus, "y" = y_mus),
"true_cluster_id" = comp1,
"true_data" = samples1,
"obs_data" = A1)
}
library(ISDBSCAN)
library(mbkmeans)
# for data viz
library(dplyr)
library(cowplot)
library(ggplot2)
nC <- 2000  # number of cells
nG <- 500 # number of genes
sim_data <- simulate_gauss_mix(n_cells=nC, n_genes=nG, k=4)
sim_data <- simulate_gauss_mix(n_cells=nC, n_genes=nG, k=6)
sim_data <- simulate_gauss_mix(n_cells=nC, n_genes=nG)
# check dimension of observed data
dim(sim_data$obs_data)
# Plot the true cluster locations
ref.cols <- c("blue", "brown1", "gold2")
clust1 <- ref.cols[sim_data$true_cluster_id]
plot(sim_data$true_data, pch=16, cex=1.5, col=clust1,
main=paste0("True structure"))
#ISDBSCAN
isDbscanRes = ISDBSCAN(sim_data$obs_data, k = 120) #Forse k 20, k25, 30, 35,40, 50, 60, 80, 100, 120
unique(isDbscanRes$clusters)
sum(isDbscanRes$clusters==-2)
isDbscanRes$clusters[isDbscanRes$clusters==-2] = 99
plotData = data.frame(cbind(sim_data$true_data, isDbscanRes$clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData, aes(x = plotData$X1, y = plotData$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
#ISDBSCAN
isDbscanRes = ISDBSCAN(sim_data$obs_data, k = 150) #Forse k 20, k25, 30, 35,40, 50, 60, 80, 100, 120ok 1000 punti
unique(isDbscanRes$clusters)
sum(isDbscanRes$clusters==-2)
isDbscanRes$clusters[isDbscanRes$clusters==-2] = 99
plotData = data.frame(cbind(sim_data$true_data, isDbscanRes$clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData, aes(x = plotData$X1, y = plotData$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
#ISDBSCAN batch
isDbscanRes_batch1 = ISDBSCAN(sim_data$obs_data, k = 120, batch_size = 250) #Forse k 20, k25, 30, 35,40, 50, 60, 80, 100, 120
#ISDBSCAN
isDbscanRes = ISDBSCAN(sim_data$obs_data, k = 200) #Forse k 20, k25, 30, 35,40, 50, 60, 80, 100, 120ok 1000 punti
unique(isDbscanRes$clusters)
sum(isDbscanRes$clusters==-2)
isDbscanRes$clusters[isDbscanRes$clusters==-2] = 99
plotData = data.frame(cbind(sim_data$true_data, isDbscanRes$clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData, aes(x = plotData$X1, y = plotData$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
#ISDBSCAN
isDbscanRes = ISDBSCAN(sim_data$obs_data, k = 250) #Forse k 20, k25, 30, 35,40, 50, 60, 80, 100, 120ok 1000 punti
unique(isDbscanRes$clusters)
sum(isDbscanRes$clusters==-2)
isDbscanRes$clusters[isDbscanRes$clusters==-2] = 99
plotData = data.frame(cbind(sim_data$true_data, isDbscanRes$clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData, aes(x = plotData$X1, y = plotData$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
#ISDBSCAN
isDbscanRes = ISDBSCAN(sim_data$obs_data, k = 300) #Forse k 20, k25, 30, 35,40, 50, 60, 80, 100, 120ok 1000 punti
unique(isDbscanRes$clusters)
sum(isDbscanRes$clusters==-2)
isDbscanRes$clusters[isDbscanRes$clusters==-2] = 99
plotData = data.frame(cbind(sim_data$true_data, isDbscanRes$clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData, aes(x = plotData$X1, y = plotData$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
#' @return a list with (1) the true cluster labels
#' (2) the true 2D dimensional data in 2D with
#' \code{n_cells} and (2) the observed data with
#' \code{n_cells} rows and \code{n_genes} columns
#'
#' @example
#' simulate_gauss_mix(n_cells=10, n_genes=5)
#'
#' @author Stephanie Hicks
#'
simulate_gauss_mix_k4 <- function(n_cells, n_genes,
k = 4, x_mus = c(0,5,5,-1),
x_sds = c(1,0.1,1, 0.3),
y_mus = c(5,5,0,0),
y_sds = c(1,0.1,1,0.3),
prop1 = c(0.3,0.2,0.2,0.3))
{
if(k != length(x_mus)){stop("k is not same as length of x_mus")}
if(k != length(x_sds)){stop("k is not same as length of x_sds")}
if(k != length(y_mus)){stop("k is not same as length of y_mus")}
if(k != length(y_sds)){stop("k is not same as length of y_sds")}
if(k != length(prop1)){stop("k is not same as length of prop1")}
comp1 <- sample(seq_len(k), prob=prop1, size=n_cells, replace=TRUE)
# Sampling locations for cells in each component
samples1 <- cbind(rnorm(n=n_cells, mean=x_mus[comp1],sd=x_sds[comp1]),
rnorm(n=n_cells, mean=y_mus[comp1],sd=y_sds[comp1]))
# Random projection to D dimensional space, to mimic high-dimensional expression data.
proj <- matrix(rnorm(n_genes*n_cells), nrow=n_genes, ncol=2)
A1 <- samples1 %*% t(proj)
# Add normally distributed noise.
A1 <- A1 + rnorm(n_genes*n_cells)
rownames(A1) <- paste0("Cell", seq_len(n_cells), "-1")
colnames(A1) <- paste0("Gene", seq_len(n_genes))
list("true_center" = cbind("x" = x_mus, "y" = y_mus),
"true_cluster_id" = comp1,
"true_data" = samples1,
"obs_data" = A1)
}
nC <- 1500  # number of cells
nG <- 500 # number of genes
sim_data <- simulate_gauss_mix_k4(n_cells=nC, n_genes=nG)
# check dimension of observed data
dim(sim_data$obs_data)
# Plot the true cluster locations
ref.cols <- c("blue", "brown1", "gold2")
# Plot the true cluster locations
ref.cols <- c("blue", "brown1", "gold2","green")
clust1 <- ref.cols[sim_data$true_cluster_id]
plot(sim_data$true_data, pch=16, cex=1.5, col=clust1,
main=paste0("True structure"))
#ISDBSCAN
isDbscanRes = ISDBSCAN(sim_data$obs_data, k = 200) #Forse k 20, k25, 30, 35,40, 50, 60, 80, 100, 120ok 1000 punti
unique(isDbscanRes$clusters)
sum(isDbscanRes$clusters==-2)
isDbscanRes$clusters[isDbscanRes$clusters==-2] = 99
plotData = data.frame(cbind(sim_data$true_data, isDbscanRes$clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData, aes(x = plotData$X1, y = plotData$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
#kmeans
kmeansRes = mbkmeans(t(sim_data$obs_data), clusters = 4)
plotData1 = data.frame(cbind(sim_data$true_data, kmeansRes$Clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData1, aes(x = plotData1$X1, y = plotData1$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
#kmeans a blocchi
kmeansRes = mbkmeans(t(sim_data$obs_data), clusters = 3, batch_size = 100)
plotData1 = data.frame(cbind(sim_data$true_data, kmeansRes$Clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData1, aes(x = plotData1$X1, y = plotData1$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
#kmeans a blocchi
kmeansRes = mbkmeans(t(sim_data$obs_data), clusters = 4, batch_size = 100)
plotData1 = data.frame(cbind(sim_data$true_data, kmeansRes$Clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData1, aes(x = plotData1$X1, y = plotData1$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
#kmeans a blocchi
kmeansRes = mbkmeans(t(sim_data$obs_data), clusters = 4, batch_size = 250)
plotData1 = data.frame(cbind(sim_data$true_data, kmeansRes$Clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData1, aes(x = plotData1$X1, y = plotData1$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
#kmeans a blocchi
kmeansRes = mbkmeans(t(sim_data$obs_data), clusters = 4, batch_size = 500)
plotData1 = data.frame(cbind(sim_data$true_data, kmeansRes$Clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData1, aes(x = plotData1$X1, y = plotData1$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
#kmeans a blocchi
kmeansRes = mbkmeans(t(sim_data$obs_data), clusters = 4, batch_size = 750)
plotData1 = data.frame(cbind(sim_data$true_data, kmeansRes$Clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData1, aes(x = plotData1$X1, y = plotData1$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
#kmeans a blocchi
kmeansRes = mbkmeans(t(sim_data$obs_data), clusters = 4, batch_size = 100)
plotData1 = data.frame(cbind(sim_data$true_data, kmeansRes$Clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData1, aes(x = plotData1$X1, y = plotData1$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
#kmeans a blocchi
kmeansRes = mbkmeans(t(sim_data$obs_data), clusters = 4, batch_size = 1500)
plotData1 = data.frame(cbind(sim_data$true_data, kmeansRes$Clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData1, aes(x = plotData1$X1, y = plotData1$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
#ISDBSCAN
isDbscanRes = ISDBSCAN(sim_data$obs_data, k = 200) #Forse k 20, k25, 30, 35,40, 50, 60, 80, 100, 120ok 1000 punti, k200 4 punti
unique(isDbscanRes$clusters)
sum(isDbscanRes$clusters==-2)
isDbscanRes$clusters[isDbscanRes$clusters==-2] = 99
plotData = data.frame(cbind(sim_data$true_data, isDbscanRes$clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData, aes(x = plotData$X1, y = plotData$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
library(ggplot2)
ggplot(plotData, aes(x = plotData$X1, y = plotData$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
sim_data <- simulate_gauss_mix(n_cells=nC, n_genes=nG)
# check dimension of observed data
dim(sim_data$obs_data)
ref.cols <- c("blue", "brown1", "gold2")
clust1 <- ref.cols[sim_data$true_cluster_id]
plot(sim_data$true_data, pch=16, cex=1.5, col=clust1,
main=paste0("True structure"))
#ISDBSCAN
isDbscanRes = ISDBSCAN(sim_data$obs_data, k = 200) #Forse k 20, k25, 30, 35,40, 50, 60, 80, 100, 120ok 1000 punti, k200 4 punti
unique(isDbscanRes$clusters)
sum(isDbscanRes$clusters==-2)
isDbscanRes$clusters[isDbscanRes$clusters==-2] = 99
plotData = data.frame(cbind(sim_data$true_data, isDbscanRes$clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData, aes(x = plotData$X1, y = plotData$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
#' @return a list with (1) the true cluster labels
#' (2) the true 2D dimensional data in 2D with
#' \code{n_cells} and (2) the observed data with
#' \code{n_cells} rows and \code{n_genes} columns
#'
#' @example
#' simulate_gauss_mix(n_cells=10, n_genes=5)
#'
#' @author Stephanie Hicks
#'
simulate_gauss_mix_k4 <- function(n_cells, n_genes,
k = 4, x_mus = c(0,5,5,-1),
x_sds = c(1,0.1,1, 0.3),
y_mus = c(5,5,0,0),
y_sds = c(1,0.1,1,0.3),
prop1 = c(0.3,0.2,0.2,0.3))
{
if(k != length(x_mus)){stop("k is not same as length of x_mus")}
if(k != length(x_sds)){stop("k is not same as length of x_sds")}
if(k != length(y_mus)){stop("k is not same as length of y_mus")}
if(k != length(y_sds)){stop("k is not same as length of y_sds")}
if(k != length(prop1)){stop("k is not same as length of prop1")}
comp1 <- sample(seq_len(k), prob=prop1, size=n_cells, replace=TRUE)
# Sampling locations for cells in each component
samples1 <- cbind(rnorm(n=n_cells, mean=x_mus[comp1],sd=x_sds[comp1]),
rnorm(n=n_cells, mean=y_mus[comp1],sd=y_sds[comp1]))
# Random projection to D dimensional space, to mimic high-dimensional expression data.
proj <- matrix(rnorm(n_genes*n_cells), nrow=n_genes, ncol=2)
A1 <- samples1 %*% t(proj)
# Add normally distributed noise.
A1 <- A1 + rnorm(n_genes*n_cells)
rownames(A1) <- paste0("Cell", seq_len(n_cells), "-1")
colnames(A1) <- paste0("Gene", seq_len(n_genes))
list("true_center" = cbind("x" = x_mus, "y" = y_mus),
"true_cluster_id" = comp1,
"true_data" = samples1,
"obs_data" = A1)
}
library(ISDBSCAN)
library(mbkmeans)
library(ggplot2)
nC <- 2000  # number of cells
nG <- 500 # number of genes
sim_data <- simulate_gauss_mix_k4(n_cells=nC, n_genes=nG)
# check dimension of observed data
dim(sim_data$obs_data)
# Plot the true cluster locations
ref.cols <- c("blue", "brown1", "gold2","green")
clust1 <- ref.cols[sim_data$true_cluster_id]
plot(sim_data$true_data, pch=16, cex=1.5, col=clust1,
main=paste0("True structure"))
#ISDBSCAN
isDbscanRes = ISDBSCAN(sim_data$obs_data, k = 200) #Forse k 20, k25, 30, 35,40, 50, 60, 80, 100, 120ok 1000 punti, k200 4 punti
unique(isDbscanRes$clusters)
sum(isDbscanRes$clusters==-2)
isDbscanRes$clusters[isDbscanRes$clusters==-2] = 99
plotData = data.frame(cbind(sim_data$true_data, isDbscanRes$clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData, aes(x = plotData$X1, y = plotData$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
#ISDBSCAN
isDbscanRes = ISDBSCAN(sim_data$obs_data, k = 250) #Forse k 20, k25, 30, 35,40, 50, 60, 80, 100, 120ok 1000 punti, k200 4 punti
unique(isDbscanRes$clusters)
sum(isDbscanRes$clusters==-2)
isDbscanRes$clusters[isDbscanRes$clusters==-2] = 99
plotData = data.frame(cbind(sim_data$true_data, isDbscanRes$clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData, aes(x = plotData$X1, y = plotData$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
#ISDBSCAN
isDbscanRes = ISDBSCAN(sim_data$obs_data, k = 270) #Forse k 20, k25, 30, 35,40, 50, 60, 80, 100, 120ok 1000 punti, k200 4 punti
unique(isDbscanRes$clusters)
sum(isDbscanRes$clusters==-2)
isDbscanRes$clusters[isDbscanRes$clusters==-2] = 99
plotData = data.frame(cbind(sim_data$true_data, isDbscanRes$clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData, aes(x = plotData$X1, y = plotData$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
#ISDBSCAN
isDbscanRes = ISDBSCAN(sim_data$obs_data, k = 300) #Forse k 20, k25, 30, 35,40, 50, 60, 80, 100, 120ok 1000 punti, k200 4 punti
unique(isDbscanRes$clusters)
sum(isDbscanRes$clusters==-2)
isDbscanRes$clusters[isDbscanRes$clusters==-2] = 99
plotData = data.frame(cbind(sim_data$true_data, isDbscanRes$clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData, aes(x = plotData$X1, y = plotData$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
#ISDBSCAN
isDbscanRes = ISDBSCAN(sim_data$obs_data, k = 350) #Forse k 20, k25, 30, 35,40, 50, 60, 80, 100, 120ok 1000 punti, k200 4 punti
unique(isDbscanRes$clusters)
sum(isDbscanRes$clusters==-2)
isDbscanRes$clusters[isDbscanRes$clusters==-2] = 99
plotData = data.frame(cbind(sim_data$true_data, isDbscanRes$clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData, aes(x = plotData$X1, y = plotData$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
#ISDBSCAN
isDbscanRes = ISDBSCAN(sim_data$obs_data, k = 300) #Forse k 20, k25, 30, 35,40, 50, 60, 80, 100, 120ok 1000 punti, k200 4 punti
unique(isDbscanRes$clusters)
sum(isDbscanRes$clusters==-2)
isDbscanRes$clusters[isDbscanRes$clusters==-2] = 99
plotData = data.frame(cbind(sim_data$true_data, isDbscanRes$clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData, aes(x = plotData$X1, y = plotData$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
#kmeans
kmeansRes = mbkmeans(t(sim_data$obs_data), clusters = 4)
plotData1 = data.frame(cbind(sim_data$true_data, kmeansRes$Clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData1, aes(x = plotData1$X1, y = plotData1$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
#kmeans
kmeansRes = mbkmeans(t(sim_data$obs_data), clusters = 4)
plotData1 = data.frame(cbind(sim_data$true_data, kmeansRes$Clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData1, aes(x = plotData1$X1, y = plotData1$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
#kmeans
kmeansRes = mbkmeans(t(sim_data$obs_data), clusters = 4, batch_size = 2000)
plotData1 = data.frame(cbind(sim_data$true_data, kmeansRes$Clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData1, aes(x = plotData1$X1, y = plotData1$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
#kmeans
kmeansRes = mbkmeans(t(sim_data$obs_data), clusters = 4, batch_size = 100)
plotData1 = data.frame(cbind(sim_data$true_data, kmeansRes$Clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData1, aes(x = plotData1$X1, y = plotData1$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
#kmeans
kmeansRes = mbkmeans(t(sim_data$obs_data), clusters = 3, batch_size = 100)
plotData1 = data.frame(cbind(sim_data$true_data, kmeansRes$Clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData1, aes(x = plotData1$X1, y = plotData1$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
plotData1$X3
#kmeans
kmeansRes = mbkmeans(t(sim_data$obs_data), clusters = 4, batch_size = 2000)
plotData1 = data.frame(cbind(sim_data$true_data, kmeansRes$Clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData1, aes(x = plotData1$X1, y = plotData1$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
ggplot(plotData, aes(x = plotData$X1, y = plotData$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
#kmeans
kmeansRes = mbkmeans(sim_data$obs_data, clusters = 4, batch_size = 2000)
#kmeans
kmeansRes1 = mbkmeans(t(sim_data$obs_data), clusters = 4, batch_size = 2000)
plotData1 = data.frame(cbind(sim_data$true_data, kmeansRes1$Clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData1, aes(x = plotData1$X1, y = plotData1$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
sim_data <- simulate_gauss_mix_k4(n_cells=nC, n_genes=nG)
# check dimension of observed data
dim(sim_data$obs_data)
# Plot the true cluster locations
ref.cols <- c("blue", "brown1", "gold2","green")
clust1 <- ref.cols[sim_data$true_cluster_id]
plot(sim_data$true_data, pch=16, cex=1.5, col=clust1,
main=paste0("True structure"))
#kmeans
kmeansRes1 = mbkmeans(t(sim_data$obs_data), clusters = 4, batch_size = 2000)
plotData1 = data.frame(cbind(sim_data$true_data, kmeansRes1$Clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData1, aes(x = plotData1$X1, y = plotData1$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
#ISDBSCAN
isDbscanRes = ISDBSCAN(sim_data$obs_data, k = 300) #Forse k 20, k25, 30, 35,40, 50, 60, 80, 100, 120ok 1000 punti, k200 4 punti
unique(isDbscanRes$clusters)
sum(isDbscanRes$clusters==-2)
isDbscanRes$clusters[isDbscanRes$clusters==-2] = 99
plotData = data.frame(cbind(sim_data$true_data, isDbscanRes$clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData, aes(x = plotData$X1, y = plotData$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
#kmeans
kmeansRes1 = mbkmeans(t(sim_data$obs_data), clusters = 4, batch_size = 2000)
plotData1 = data.frame(cbind(sim_data$true_data, kmeansRes1$Clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData1, aes(x = plotData1$X1, y = plotData1$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
#kmeans
kmeansRes1 = mbkmeans(t(sim_data$obs_data), clusters = 4, batch_size = 200)
plotData1 = data.frame(cbind(sim_data$true_data, kmeansRes1$Clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData1, aes(x = plotData1$X1, y = plotData1$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
#kmeans
kmeansRes1 = mbkmeans(t(sim_data$obs_data), clusters = 4, batch_size = 100)
plotData1 = data.frame(cbind(sim_data$true_data, kmeansRes1$Clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData1, aes(x = plotData1$X1, y = plotData1$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
#kmeans
kmeansRes1 = mbkmeans(t(sim_data$obs_data), clusters = 4, batch_size = 100)
plotData1 = data.frame(cbind(sim_data$true_data, kmeansRes1$Clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData1, aes(x = plotData1$X1, y = plotData1$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
#kmeans
kmeansRes1 = mbkmeans(t(sim_data$obs_data), clusters = 4, batch_size = 200)
plotData1 = data.frame(cbind(sim_data$true_data, kmeansRes1$Clusters))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
ggplot(plotData1, aes(x = plotData1$X1, y = plotData1$X2), colors(distinct = TRUE)) + geom_point(aes(colour = factor(X3), group = X3))
